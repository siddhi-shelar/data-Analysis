# -*- coding: utf-8 -*-
"""project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g54CjrhITrnQtVMnmm4W0aX_7S18TqA7
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv('/content/cleaned.csv')
df

df.head()

df.isnull().sum()

df.describe()

df.shape

df.info()

df.nunique()

"""#Q1 What was the best year of sales?

"""

df.groupby('year')['amount'].count().plot(kind='bar',title='Year Wise Sales')

"""#Q2. Which was the best month for sales between 2015 t0 2018

"""

df_filtered = df[(df['year'] >= 2015) & (df['year'] <= 2018)]

monthly_sales = df_filtered.groupby('month')['amount'].sum()

best_month = monthly_sales.idxmax()

print(f"The best month for sales between 2015 and 2018 was: {best_month}")

dataset_2015_2018 = df[(df['year'] >= 2015) & (df['year']
<= 2018)]
dataset_2015_2018.groupby('month')['rating'].count().plot(kind='bar')

"""Q3  What brand sold the most in the highest selling year(2015 to 2018)"""

dataset_2015_2018 = df[(df['year'] >= 2015) & (df['year']
<= 2018)]
dataset_2015_2018.groupby('brand')['amount'].sum().sort_values(ascending
=False).head(10)\
.plot(kind='bar',title='Brand Wise Top 10 Sales 2015 to 2018',y='amount')

"""Q4 What products sold the most in the three years 2016, 2017 & 2018"""

fig, axs = plt.subplots(2, 2, figsize=(12, 10))
# Plot for 2016
top_selling_2016 = df[df['year'] ==2016].groupby('brand')['rating'].count().sort_values(ascending=False).head(10)
axs[0, 0].bar(top_selling_2016.index, top_selling_2016)
axs[0, 0].set_title('Top Selling Products in 2016')
axs[0, 0].tick_params(axis='x', rotation=45) # Rotate x-axis labels
# Plot for 2017
top_selling_2017 = df[df['year'] ==2017].groupby('brand')['rating'].count().sort_values(ascending=False).head(10)
axs[0, 1].bar(top_selling_2017.index, top_selling_2017)
axs[0, 1].set_title('Top Selling Products in 2017')
axs[0, 1].tick_params(axis='x', rotation=45) # Rotate x-axis labels
# Plot for 2018
top_selling_2018 = df[df['year'] ==2018].groupby('brand')['rating'].count().sort_values(ascending=False).head(10)
axs[1, 0].bar(top_selling_2018.index, top_selling_2018)
axs[1, 0].set_title('Top Selling Products in 2018')
axs[1, 0].tick_params(axis='x', rotation=45) # Rotate x-axis labels
# Hide the empty subplot
axs[1, 1].axis('off')
# Adjust layout for better appearance
plt.tight_layout()
# Show the plots
plt.show()

"""#Q5. What product by category sold the most between 2015 to 2018?"""

dataset2015_2018 = df[(df['year'] >= 2015) & (df['year']<= 2018)]
dataset2015_2018.groupby('category')['amount'].sum().sort_values(ascending=False).head(10).plot(kind='bar',title='Top 10 Most Sold Product Category 2015 to 2018')

"""#Q6 What product by category sold the least between 2015 to 2018?"""

dataset2015_2018 = df[(df['year'] >= 2015) & (df['year'] <= 2018)]
least_sold_category = dataset2015_2018.groupby('category')['amount'].sum().idxmin()
print(f"The product category that sold the least between 2015 and 2018 was: {least_sold_category}")

dataset2015_2018 = df[(df['year'] >= 2015) & (df['year']<= 2018)]
dataset2015_2018.groupby('category')['amount'].sum().sort_values(ascending=True).head(10).plot(kind='bar',title='10 Least Sold Product Brand 2015 to 2018')

"""#Q7. What product by brand name sold the least between 2015 to 2018?"""

dataset2015_2018 = df[(df['year'] >= 2015) & (df['year'] <= 2018)]
least_sold_brand = dataset2015_2018.groupby('brand')['amount'].sum().idxmin()
print(f"The product brand that sold the least between 2015 and 2018 was: {least_sold_brand}")

dataset2015_2018 = df[(df['year'] >= 2015) & (df['year']<= 2018)]
dataset2015_2018.groupby('brand')['amount'].sum().sort_values(ascending=True).head(10).plot(kind='bar',title='10 Least Sold Product Brand 2015 to 2018')

"""#Q8 Ratings Distribution"""

# prompt: Ratings Distribution

# Q8 Ratings Distribution
plt.figure(figsize=(8, 6))
sns.histplot(df['rating'], bins=10, kde=True)
plt.title('Distribution of Product Ratings')
plt.xlabel('Rating')
plt.ylabel('Frequency')
plt.show()

# You can also analyze the rating distribution using a boxplot:
plt.figure(figsize=(8, 6))
sns.boxplot(x='rating', data=df)
plt.title('Boxplot of Product Ratings')
plt.show()

sns.countplot(x='rating', data=df)

"""# Q9 Best rated brands"""

average_brand_ratings = df.groupby('brand')['rating'].mean()

best_rated_brands = average_brand_ratings.sort_values(ascending=False)

print("Top 10 Best-Rated Brands:")
print(best_rated_brands.head(10))

plt.figure(figsize=(12, 6))
best_rated_brands.head(10).plot(kind='bar', title='Top 10 Best-Rated Brands')
plt.xlabel('Brand')
plt.ylabel('Average Rating')
plt.show()

"""# Q10 Top 5 category sales percentage"""

category_sales = df.groupby('category')['amount'].sum()

total_sales = category_sales.sum()

category_sales_percentage = (category_sales / total_sales) * 100

top_5_categories = category_sales_percentage.sort_values(ascending=False).head(5)

print("Top 5 Category Sales Percentage:")
print(top_5_categories)

plt.figure(figsize=(10, 6))
top_5_categories.plot(kind='bar', title='Top 5 Category Sales Percentage')
plt.xlabel('Category')
plt.ylabel('Sales Percentage')
plt.show()

"""# Q11 Brand wise sales percentage

"""

brand_sales = df.groupby('brand')['amount'].sum()

total_sales = brand_sales.sum()

brand_sales_percentage = (brand_sales / total_sales) * 100

plt.figure(figsize=(10, 6))
plt.pie(brand_sales_percentage, labels=brand_sales_percentage.index, autopct='%1.1f%%', startangle=90)
plt.title('Brand Wise Sales Percentage')
plt.show()

brand_sales = df.groupby('brand')['amount'].sum()

total_sales = brand_sales.sum()

brand_sales_percentage = (brand_sales / total_sales) * 100

# Sort the brands by sales percentage in descending order
brand_sales_percentage = brand_sales_percentage.sort_values(ascending=False)

plt.figure(figsize=(12, 6))
brand_sales_percentage.plot(kind='bar', title='Brand Wise Sales Percentage')
plt.xlabel('Brand')
plt.ylabel('Sales Percentage')
plt.show()

"""#Q12 Brand wise sales percentage

"""

brand_sales = df.groupby('brand')['amount'].sum()

total_sales = brand_sales.sum()

brand_sales_percentage = (brand_sales / total_sales) * 100

# Sort the brands by sales percentage in descending order
brand_sales_percentage = brand_sales_percentage.sort_values(ascending=False)

plt.figure(figsize=(12, 6))
brand_sales_percentage.plot(kind='bar', title='Brand Wise Sales Percentage')
plt.xlabel('Brand')
plt.ylabel('Sales Percentage')
plt.show()

gender_distribution = df['gender'].value_counts()
plt.pie(gender_distribution, labels=gender_distribution.index,autopct='%1.1f%%', startangle=90, colors=['blue', 'red'])
plt.title('Gender wise customer Distribution')
plt.show()